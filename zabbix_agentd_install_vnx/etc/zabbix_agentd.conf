# This is a config file for Zabbix internet service daemon agent
# To get more information about Zabbix visit http://www.zabbix.com

### Option: Server
#	IP address of Zabbix server
#	Connections from other hosts will be denied
#	If IPv6 support is enabled then '127.0.0.1', '::127.0.0.1', '::ffff:127.0.0.1' are treated equally.
#
# Mandatory: yes
# Default:
# Server=

#Server=127.0.0.1
Server=192.168.0.57

### Option: LogFile
#	Name of log file.
#	If not set, syslog is used.
#
# Mandatory: no
# Default:
LogFile=/var/log/zabbix_agentd.log



############ ADVANCED PARAMETERS #################

### Option: Alias
#	Sets an alias for parameter. It can be useful to substitute long and complex parameter name with a smaller and simpler one.
#
# Mandatory: no
# Range:
# Default:

### Option: Timeout
#	Spend no more than Timeout seconds on processing
#
# Mandatory: no
# Range: 1-30
# Default:
# Timeout=3

### Option: Include
#	You may include individual files or all files in a directory in the configuration file.
#	Installing Zabbix will create include directory in /usr/local/etc, unless modified during the compile time.
#
# Mandatory: no
# Default:
# Include=

# Include=/usr/local/etc/zabbix_agent.userparams.conf
# Include=/usr/local/etc/zabbix_agent.conf.d/

####### USER-DEFINED MONITORED PARAMETERS #######

### Option: UnsafeUserParameters
#	Allow all characters to be passed in arguments to user-defined parameters.
#	0 - do not allow
#	1 - allow
#
# Mandatory: no
# Default:
# UnsafeUserParameters=0

### Option: UserParameter
#	User-defined parameter to monitor. There can be several user-defined parameters.
#	Format: UserParameter=<key>,<shell command>
#	See 'zabbix_agentd' directory for examples.
#
# Mandatory: no
# Default:
# UserParameter=
UserParameter=wc[*],grep -c "$2" $1
UserParameter=echo[*],echo "echo worked\n"
UserParameter=echothis[*],echo $1
UserParameter=vnxtime[*],date
UserParameter=vfs.partitions.discovery.atmos,for partition in $(awk 'NR > 2 {print $4}' /proc/partitions | grep -E '^sd([a-z]1|[a-z][a-z]1)$'); do partitionlist="$partitionlist,"'{"{#PARTITION}":"'$partition'"}'; done; echo '{"data":['${partitionlist#,}']}'
UserParameter=array.vnx.name[*],grep arrayname /var/log/nas_storage_info.txt | tail -1| awk -F= ' { print $2 } ' 
UserParameter=array.vnx.network.name[*],grep network_name /var/log/nas_storage_info.txt | tail -1| awk -F= ' { print $2 } '
UserParameter=array.vnx.api.version[*],grep API_version /var/log/nas_storage_info.txt | tail -1| awk -F= ' { print $2 } '
UserParameter=array.vnx.disks.number[*],grep num_disks /var/log/nas_storage_info.txt | tail -1| awk -F= ' { print $2 } '
UserParameter=array.vnx.storagegroups.count[*],grep num_storage_grps /var/log/nas_storage_info.txt | tail -1| awk -F= ' { print $2 } '
UserParameter=array.vnx.model.number[*],grep model_num /var/log/nas_storage_info.txt | tail -1| awk -F= ' { print $2 } '
UserParameter=array.vnx.microcode.level[*],grep microcode_version /var/log/nas_storage_info.txt | tail -1| awk -F= ' { print $2 } '
UserParameter=array.vnx.serial.number[*],grep serial_num /var/log/nas_storage_info.txt | tail -1| awk -F= ' { print $2 } '
UserParameter=array.vnx.physical.memory.megabytes[*],grep phys_memory /var/log/nas_storage_info.txt | tail -1| awk -F= ' { print $2 } ' 
UserParameter=array.vnx.physical.raid.level[*],grep raid_type /var/log/nas_storage_info.txt  | tail -1| awk -F= ' { print $2 } '
#UserParameter=array.vnx.filesystem.discovery[*],fs_discovery_perl.pl
UserParameter=array.vnx.filesystem.capacity.size[*],cat /zabbix_operations/data/size
UserParameter=array.vnx.filesystem.capacity.used[*],cat /zabbix_operations/data/used
UserParameter=array.vnx.filesystem.capacity.avail[*],cat /zabbix_operations/data/avail
UserParameter=array.vnx.filesystem.capacity.rawdiskcapacitysum[*],cat /zabbix_operations/data/rawdiskcapacitysum
UserParameter=array.vnx.inventory[*],/nas/bin/nas_inventory -list
UserParameter=array.vnx.server.version[*],cat /zabbix_operations/data/server.version
UserParameter=array.vnx.license.list[*],cat /zabbix_operations/data/license.list
UserParameter=array.vnx.movers.failed[*],cat /zabbix_operations/data/array.vnx.movers.failed
UserParameter=array.vnx.cpu.load[*],cat /zabbix_operations/data/array.vnx.cpu.load


####### LOADABLE MODULES #######

### Option: LoadModulePath
#	Full path to location of agent modules.
#	Default depends on compilation options.
#
# Mandatory: no
# Default:
# LoadModulePath=${libdir}/modules

### Option: LoadModule
#	Module to load at agent startup. Modules are used to extend functionality of the agent.
#	Format: LoadModule=<module.so>
#	The modules must be located in directory specified by LoadModulePath.
#	It is allowed to include multiple LoadModule parameters.
#
# Mandatory: no
# Default:
# LoadModule=
